version: 2.1
orbs:
  docker: circleci/docker@2.1.1
  sonarcloud: sonarsource/sonarcloud@2.0.0
  gradle: circleci/gradle@3.0.0
executors:
  machine_executor_amd64:
      machine:
        image: ubuntu-2204:2022.04.2
      environment:
        architecture: "amd64"
        platform: "linux/amd64"
jobs:
  scan:
    executor:
      name: docker/docker
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - sonarcloud/scan
  build_and_test:
    executor:
      name: docker/docker
    working_directory: /home/circleci/flexo-mms-auth-service
    steps:
      - checkout
      - setup_remote_docker:
            docker_layer_caching: true
      - run:
            name: Build docker image
            command: |
              cp src/main/resources/application.conf.example ./src/main/resources/application.conf
              docker build -t openmbee/flexo-mms-auth-service:latest .
      - run:
            name: Export docker image
            command: |
              docker save -o flexo-mms-auth-service.tar openmbee/flexo-mms-auth-service:latest
      - persist_to_workspace:
            root: /home/circleci/
            paths:
              - flexo-mms-auth-service/*

  deploy_snapshot:
      executor:
        name: docker/docker
      working_directory: /home/circleci/flexo-mms-auth-service
      steps:
          - setup_remote_docker:
                docker_layer_caching: true
          - attach_workspace:
                at: ~/
          - run:
                name: Login to Dockerhub
                command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - run:
                name: Load docker image
                command: docker load -i flexo-mms-auth-service.tar
          - run:
                name: Tag docker image
                command: docker tag openmbee/flexo-mms-auth-service:latest openmbee/flexo-mms-auth-service:${CIRCLE_BRANCH#*/}-SNAPSHOT
          - run:
                name: Deploy snapshot to Dockerhub
                command: docker push openmbee/flexo-mms-auth-service:${CIRCLE_BRANCH#*/}-SNAPSHOT
  deploy_release:
      executor:
        name: docker/docker
      working_directory: /home/circleci/flexo-mms-auth-service
      steps:
          - setup_remote_docker:
                docker_layer_caching: true
          - attach_workspace:
                at: ~/
          - run:
                name: Login to Dockerhub
                command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          - run:
                name: Load docker image
                command: docker load -i flexo-mms-auth-service.tar
          - run:
                name: Tag docker image
                command: docker tag openmbee/flexo-mms-auth-service:latest openmbee/flexo-mms-auth-service:${CIRCLE_TAG}
          - run:
                name: Deploy release to dockerhub
                command: docker push openmbee/flexo-mms-auth-service:${CIRCLE_TAG}
          - run:
                name: Deploy release as latest to dockerhub
                command: docker push openmbee/flexo-mms-auth-service:latest

workflows:
    version: 2
    build-test-deploy:
      jobs:
        - gradle/test:
            post-steps:
              - persist_to_workspace:
                  root: /home/circleci/project
                  paths:
                    - build/*
            executor: machine_executor_amd64
        - scan:
            requires:
              - gradle/test
            context:
              - SonarCloud
        - build_and_test:
              filters:
                  tags:
                      only: /v[0-9.]+(-[\w-]+(\.[0-9]+)?)?/
              context:
                - DockerHub
                - SonarCloud
        - deploy_snapshot:
              requires:
                  - build_and_test
              filters:
                  branches:
                      only: /((release|hotfix|support)/[0-9.]+(-[\w-]+(\.[0-9]+)?)?|develop)/
              context:
                - DockerHub
        - deploy_release:
              requires:
                  - build_and_test
              filters:
                  tags:
                      only: /v[0-9.]+(-[\w-]+(\.[0-9]+)?)?/
                  branches:
                      ignore: /.*/
              context:
                - DockerHub
